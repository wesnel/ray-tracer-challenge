name: build

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version:
          - "1.18"
          - "1.19"
          - "1.20"
          - "1.21"
          - "1.22"
    steps:
      - uses: actions/checkout@v4

      - name: setup go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: install dependencies
        run: go mod download

      - name: build ${{ matrix.go-version }}
        run: go build -v ./...

      - name: test ${{ matrix.go-version }}
        run: go test -v ./...

  analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: install dependencies
        run: go mod download

      - name: build
        run: go build -v ./...

      - name: test
        run: bash -c "set -o pipefail && go test -v -json -coverprofile=coverage.out -covermode=atomic -coverpkg=./... ./... | tee report.json"

      - name: upload test results
        uses: actions/upload-artifact@v4
        with:
          name: report
          path: report.json

      - name: upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.out

      - name: sonar scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
